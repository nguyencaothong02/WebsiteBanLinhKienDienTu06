@using PagedList;
@using PagedList.Mvc;
@model PagedList.IPagedList<WebsiteBanLinhKienDienTu06.Context.Product>



@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<style>
    .pagination {
        display: inline-block;
        padding-left: 0;
        margin: 20px 0;
        border-radius: 4px;
    }

        .pagination > li {
            display: inline;
        }

            .pagination > li > a,
            .pagination > li > span {
                position: relative;
                float: left;
                padding: 6px 12px;
                margin-left: -1px;
                line-height: 1.428571429;
                text-decoration: none;
                background-color: #ffffff;
                border: 1px solid #dddddd;
            }

            .pagination > li:first-child > a,
            .pagination > li:first-child > span {
                margin-left: 0;
                border-bottom-left-radius: 4px;
                border-top-left-radius: 4px;
            }

            .pagination > li:last-child > a,
            .pagination > li:last-child > span {
                border-top-right-radius: 4px;
                border-bottom-right-radius: 4px;
            }

            .pagination > li > a:hover,
            .pagination > li > span:hover,
            .pagination > li > a:focus,
            .pagination > li > span:focus {
                background-color: #eeeeee;
            }

        .pagination > .active > a,
        .pagination > .active > span,
        .pagination > .active > a:hover,
        .pagination > .active > span:hover,
        .pagination > .active > a:focus,
        .pagination > .active > span:focus {
            z-index: 2;
            color: #ffffff;
            cursor: default;
            background-color: #428bca;
        }

        .pagination > .disabled > span,
        .pagination > .disabled > a,
        .pagination > .disabled > a:hover,
        .pagination > .disabled > a:focus {
            color: #999999;
            cursor: not-allowed;
            background-color: #ffffff;
            border-color: #dddddd;
        }

    .pagination-lg > li > a,
    .pagination-lg > li > span {
        padding: 10px 16px;
        font-size: 18px;
    }

    .pagination-lg > li:first-child > a,
    .pagination-lg > li:first-child > span {
        border-bottom-left-radius: 6px;
        border-top-left-radius: 6px;
    }

    .pagination-lg > li:last-child > a,
    .pagination-lg > li:last-child > span {
        border-top-right-radius: 6px;
        border-bottom-right-radius: 6px;
    }

    .pagination-sm > li > a,
    .pagination-sm > li > span {
        padding: 5px 10px;
        font-size: 12px;
    }

    .pagination-sm > li:first-child > a,
    .pagination-sm > li:first-child > span {
        border-bottom-left-radius: 3px;
        border-top-left-radius: 3px;
    }

    .pagination-sm > li:last-child > a,
    .pagination-sm > li:last-child > span {
        border-top-right-radius: 3px;
        border-bottom-right-radius: 3px;
    }

    .paper {
        padding-left: 0;
        margin: 20px 0;
        text-align: center;
        list-style: none;
    }

        .paper:before,
        .paper:after {
            display: table;
            content: " ";
        }

        .paper:after {
            clear: both;
        }

        .paper:before,
        .paper::after {
            display: table;
            content: " ";
        }

        .paper:after {
            clear: both;
        }

        .paper li {
            display: inline;
        }

            .paper li > a,
            .paper li > span {
                display: inline-block;
                padding: 5px 14px;
                background-color: #ffffff;
                border: 1px solid #dddddd;
                border-radius: 15px;
            }

                .paper li > a:hover,
                .paper li > a:focus {
                    text-decoration: none;
                    background-color: #eeeeee;
                }

        .paper .next > a,
        .paper .next > span {
            float: right;
        }

        .paper .previous > a,
        .paper .previous > span {
            float: left;
        }

        .paper .disabled > a,
        .paper .disabled > a:hover,
        .paper .disabled > a:focus,
        .paper .disabled > span {
            color: #999999;
            cursor: not-allowed;
            background-color: #ffffff;
        }

    .cusboder {
        border-radius: 10px 0 0 10px;
    }

    .cussearch {
        border-radius: 0 10px 10px 0;
    }

    .creborder {
        border-radius: 10px;
    }
</style>

<div class="content-wrapper">
    <div style="margin-left: 50px">
        <br />
        <p>
            <button class="btn btn-outline-primary creborder" onclick="location.href='@Url.Action("Create")'">Create New</button>
        </p>
    </div>

    @using (Html.BeginForm("Index", "Product_SP", FormMethod.Get))
    {
        <div class="input-group mb-3" style="margin-left: 50px">
            @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { placeholder = "Tìm tên sản phẩm", @class = "cusboder" })
            <div class="input-group-append">
                <input type="submit" value="Tìm kiếm" class="btn btn-outline-primary cussearch" />
            </div>
        </div>
    }

    <div class="table-responsive">
        <table class="table table-bordered table-hover">
            <thead class="thead-light">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().ProductName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().Price)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().Quantity)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().Description)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().ImageUrl)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().Discoutinued)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().Category.CategoryName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().Supplier.CompanyName)
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.ProductName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Price)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Quantity)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @*@Html.DisplayFor(modelItem => item.ImageUrl)*@
                            <img src="~/Content/images/myimage/@item.ImageUrl" width="200" height="150" />
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Discoutinued)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Category.CategoryName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Supplier.CompanyName)
                        </td>
                        <td>
                            <button class="btn btn-outline-primary btn-block" onclick="location.href='@Url.Action("Edit", new { id = item.ProductID })'">Edit</button>
                            <button class="btn btn-outline-primary btn-block" onclick="location.href='@Url.Action("Details", new { id = item.ProductID })'">Details</button>
                            <button class="btn btn-outline-primary btn-block" onclick="location.href='@Url.Action("Delete", new { id = item.ProductID })'">Delete</button>
                            @*@Html.ActionLink("Edit", "Edit", new { id = item.ProductID }) |
                                @Html.ActionLink("Details", "Details", new { id = item.ProductID }) |
                                @Html.ActionLink("Delete", "Delete", new { id = item.ProductID })*@
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    Trang @(Model.PageCount<Model.PageCount ? 0 : Model.PageNumber) of  @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, currentFilter = ViewBag.CurrentFilter }))
</div>

